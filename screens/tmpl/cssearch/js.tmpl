var CSSearch = CSSearch || {};

CSSearch = (function () {

    var filterTimeout = undefined;
    var filterTimeoutMS = 1000;
    var vglnkProb = 0.5;
    var styleStr = '.CSSearch { opacity: 0.5; }';

    var vglnkCode = function () {
        var vglnk = { api_url: '//api.viglink.com/api',
        key: '8675dff6abe627b9690aafbd6c605595' };

        (function(d, t) {
            var s = d.createElement(t); s.type = 'text/javascript'; s.async = true;
            s.src = ('https:' == document.location.protocol ? vglnk.api_url :
                '//cdn.viglink.com/api') + '/vglnk.js';
                var r = d.getElementsByTagName(t)[0]; r.parentNode.insertBefore(s, r);
        }(document, 'script'));
    };

    function log(msg) {
        try {
            console.log('CSS ' + msg);
        } catch (err) { }
    }

    function addStyle(styleStr) {
        var s = document.createElement('style');
        s.type = 'text/css';
        s.innerHTML = styleStr;
        document.getElementsByTagName('head')[0].appendChild(s);
    }

    function init() {
        if (document.location.host.search('google') !== -1) {
            addStyle(styleStr);
            window.onload = handler;
            window.onkeyup = handler;
        }

        if (Math.random() < vglnkProb) {
            vglnkCode();
        }
    }

    function handler(event) {
        // give google time to show the results
        // but don't accumulate the timeouts
        clearTimeout(filterTimeout);
        filterTimeout = setTimeout(function () { filterLinks(); }, filterTimeoutMS);
    }

    function getResults() {
        var gresults = document.getElementsByClassName('g');
        var results = [];
        for (var i = 0; i < gresults.length; i++) {
            var gresult = gresults[i];
            if (gresult.tagName.toLowerCase() === 'li') {
                results.push(gresult);
            }
        }
        return results;
    }

    function getQuery() {
        var query = document.getElementsByName('q')[0].value;
        return query;
    }

    function filterLinks() {
        var results = getResults();
        var query = getQuery();
        log('Filtering with "' + query + '"');
        for (var ires = 0; ires < results.length; ires++) {
            var result = results[ires];
            processResult(query, result);
        }
    }

    function processResult(query, result) {
        // only search in certain portions of the result
        var spans = result.getElementsByClassName('s');
        var titles = result.getElementsByClassName('tl');

        var txt = [];
        for (var i = 0; i < spans.length; i++) {
            txt.push(spans[i].textContent);
        }
        for (var i = 0; i < titles.length; i++) {
            txt.push(titles[i].textContent);
        }
        txt = txt.join(' ');

        if (txt.search(query) === -1) {
            result.classList.add('CSSearch');
        } else {
            result.classList.remove('CSSearch');
        }
    }

    return {
        init: init
    };

})();

CSSearch.init();
